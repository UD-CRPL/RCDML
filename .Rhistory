if(require("docopt")){
print("docopt loaded correctly")
} else {
print("Trying to install docopt")
install.packages('docopt', repos="http://cran.r-project.org")
if (require("docopt")){
print("docopt installed and loaded")
} else {
stop("could not install docopt")
}
}
if(require("limma")){
print("limma loaded correctly")
} else {
print("Trying to install limma")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
if (require("limma")){
print("limma installed and loaded")
} else {
stop("could not install limma")
}
}
if (!require("BiocManager", quietly = TRUE))
BiocManager::install(version = "3.15")
BiocManager::install(c("limma"))
BiocManager::install(c("limma", "edgeR"))
if(require("limma")){
print("limma loaded correctly")
} else {
print("Trying to install limma")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
if (require("limma")){
print("limma installed and loaded")
} else {
stop("could not install limma")
}
}
if(require("edgeR")){
print("edgeR loaded correctly")
} else {
print("Trying to install edgeR")
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
if (require("edgeR")){
print("edgeR installed and loaded")
} else {
stop("could not install edgeR")
}
}
if(require("tidyr")){
print("tidyr loaded correctly")
} else {
print("Trying to install tidyr")
install.packages('tidyr', repos="http://cran.r-project.org")
if (require("tidyr")){
print("tidyr installed and loaded")
} else {
stop("could not install tidyr")
}
}
if(require("matrixStats")){
print("matrixStats loaded correctly")
} else {
print("Trying to install matrixStats")
install.packages('matrixStats', repos="http://cran.r-project.org")
if (require("matrixStats")){
print("matrixStats installed and loaded")
} else {
stop("could not install matrixStats")
}
}
## Args to vars
file <- args$`--file`
args    <- docopt(doc)
"
Usage:
edger_pipe.r --file=<file> --name=<name> --dir=<dir>
edger_pipe.r (-h | --help)
Description:   Runs an edgeR analysis on input RSEM files and conditions.
Options:
--file=<file>     File detailing samples and groups
--dir=<dir>       Working directory
--name=<name>     A prefix for output files
" -> doc
args    <- docopt(doc)
## Args to vars
file <- args$`--file`
"
Usage:
edger_pipe.r --file=<file> --name=<name> --dir=<dir>
edger_pipe.r (-h | --help)
Description:   Runs an edgeR analysis on input RSEM files and conditions.
Options:
--file=<file>     File detailing samples and groups
--dir=<dir>       Working directory
--name=<name>     A prefix for output files
" -> doc
args    <- docopt(doc)
